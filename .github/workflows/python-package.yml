# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: at client

on:
  push:
    branches: [ "trunk", "dev" ]
  pull_request:
    branches: [ "trunk", "dev" ]

permissions:  # added using https://github.com/step-security/secure-repo
  contents: read

jobs:
  build:
    # Don't run on PRs from a fork as the secrets aren't available
    if: ${{ github.event.pull_request.head.repo.fork == false }}
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@cba0d00b1fc9a034e1e642ea0f1103c282990604 # v2.5.0
      with:
        egress-policy: audit

    - name: Checkout at_python
      uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1 # v4.7.0
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python3 -m pip install --require-hashes -r requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        mkdir keys
        echo '${{secrets.BARRACUDA_ATKEYS}}' > keys/@27barracuda_key.atKeys
        echo '${{secrets.AMATEUR_ATKEYS}}' > keys/@amateur93_key.atKeys
        echo '${{secrets.UNIVERSALALOO_ATKEYS}}' > keys/@universal27aloo_key.atKeys
        if [[ "$GITHUB_ACTOR" == "dependabot[bot]" ]]; then
            echo "This is a Dependabot pull request."
            export DEPENDABOT_PR=1 
          else
            echo "This is not a Dependabot pull request."
            export DEPENDABOT_PR=0
        fi
        python3 -m unittest discover -s test -p '*_test.py' -v
